
name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.10.0]
    steps:
    - uses: actions/checkout@v3
    - uses: pnpm/action-setup@v2
      with:
        version: 8
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install pnpm
      run: npm i -g pnpm
    
    - name: Install Node.js dependencies
      run: pnpm i

    - name: Create .env file
      run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
          echo "OPENAI_ORG=${{ secrets.OPENAI_ORG }}" >> .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "STRIPE_SK=${{ secrets.STRIPE_SK }}" >> .env
          echo "STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}" >> .env
          echo "STRIPE_COUPON=${{ secrets.STRIPE_COUPON }}" >> .env
          echo "STRIPE_ENDPOINT_SECRET=${{ secrets.STRIPE_ENDPOINT_SECRET }}" >> .env
          echo "EMAILSENDER_API_KEY=${{ secrets.EMAILSENDER_API_KEY }}" >> .env
          echo "AUTH_SK=${{ secrets.AUTH_SK }}" >> .env
          echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> .env


    - name: Prisma Generate
      run: npx prisma generate

    - name: Prisma Deploy
      run: npx prisma migrate deploy
   
    - name: Build APP
      run: pnpm build
    
    - name: Run and restart server
      run: cd /home/ubuntu/actions-runner/_work/backend/backend
    - run: pm2 restart 0
    
    - name: Build Worker
      run: cd /home/ubuntu/actions-runner/_work/backend/backend/worker &&  pnpm i && pnpm build
    - run: npx prisma generate

    - name: Run and restart worker
      run: cd /home/ubuntu/actions-runner/_work/backend/backend/worker
    - run: pm2 restart 1
    
