generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String
  email                String     @unique
  provider             String
  firstAccess          Boolean    @default(true)
  country              String
  password             String?
  stripeCustomerId     String?    @unique
  stripeSubscriptionId String?    @unique
  tempToken            String?
  verifiedEmail        Boolean    @default(false)
  metadata             Json?
  paymentIntentStatus  String?
  subscribeStatus      String     @default("unfinished")
  createdAt            DateTime   @default(now())
  updateAt             DateTime   @updatedAt
  Patients             Pacients[]
}

model Notes {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tags        String[] @default([])
  title       String?
  note        String
  summary     String
  session     String
  description String?
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
  pacientId   String   @db.Uuid
  analysed    Boolean  @default(false)
  Pacient     Pacients @relation(fields: [pacientId], references: [id])
}

model Analyse {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  result          String?
  usage           Json?
  keywords        String[]
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt
  sessions        String[]
  title           String?
  analysed        Boolean  @default(false)
  pacientId       String   @db.Uuid
  error           Boolean  @default(false)
  attentionPoints String[]
  Pacient         Pacients @relation(fields: [pacientId], references: [id])
}

model Pacients {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  userId    String    @db.Uuid
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  age       Int?      @default(0)
  reason    String?   @default("")
  Analyse   Analyse[]
  Notes     Notes[]
  User      User      @relation(fields: [userId], references: [id])
}

model Emails {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String
  createdAt DateTime @default(now())
}
